server.port = 8080

spring.application.name=my-social-login-web-client


#spring.security.oauth2.client.registration.google.client-id=1037915168285-t4jc5dgegflvgsl1aca777lqoeddhsto.apps.googleusercontent.com
#spring.security.oauth2.client.registration.google.client-secret=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


#spring.security.oauth2.client.registration.facebook.client-id=
#spring.security.oauth2.client.registration.facebook.client-secret=


#spring.security.oauth2.client.registration.github.client-id=
#spring.security.oauth2.client.registration.github.client-secret=


spring.security.oauth2.client.registration.okta.client-id=0oali0buwi4Sodrjl5d7
spring.security.oauth2.client.registration.okta.client-secret=zA3v7ysddarON_tKovfNyVcH-iWvIVhuKfk6AuA5lxHzZ9B04-hMEVJhrfXjvG_-
spring.security.oauth2.client.registration.okta.scope=openid,profile

spring.security.oauth2.client.registration.okta.redirect-uri=http://localhost:8080/login/oauth2/code/okta
spring.security.oauth2.client.provider.okta.issuer-uri=https://dev-04957653.okta.com

########   OIDC Discovery .well-known end-point    ##########
# KEYCLOACK RUNNING LOCAL (OPEN SOURCE CODE TO RUN OIDC AUTH SERVER)
#http://localhost:9091/realms/appsdeveloperblog/.well-known/openid-configuration

# OKTA RUNNING ON THE CLOUD WITH DEVELOPER ACCOUNT
#https://dev-04957653.okta.com//.well-known/openid-configuration